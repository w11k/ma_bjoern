var serviceWorkerOption = {
  "assets": [
    "/style.a18f7564bd20181b781c.css",
    "/main.88776107e60529530782.js",
    "/index.html"
  ]
};
        
        !function(e){var n={};function t(r){if(n[r])return n[r].exports;var o=n[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,t),o.l=!0,o.exports}t.m=e,t.c=n,t.d=function(e,n,r){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:r})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(t.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var o in e)t.d(r,o,function(n){return e[n]}.bind(null,o));return r},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="",t(t.s=0)}([function(e,n){self.addEventListener("install",function(e){var n=new Request("index.html");e.waitUntil(fetch(n).then(function(e){return caches.open("vanilla-fw").then(function(t){return console.log("[PWA] Cached index page during Install "+e.url),t.put(n,e)})}))}),self.addEventListener("fetch",function(e){var n=e.request;if(n.url.indexOf("#")>-1){var t=n.url.split("#/")[0];n=new Request(t)}0===n.url.indexOf("http")&&e.waitUntil(function(e){return caches.open("vanilla-fw").then(function(n){return fetch(e).then(function(t){return console.log("[PWA] add page to offline "+t.url),n.put(e,t)})})}(n)),e.respondWith(fetch(n).catch(function(e){return console.log("[PWA] Network request Failed. Serving content from cache: "+e),caches.open("vanilla-fw").then(function(e){return e.match(n).then(function(e){return e&&404!==e.status?e:Promise.reject("no-match")})})}))})}]);