{"version":3,"sources":["typings.ts","constants.tsx","withRoot.tsx","components/About.tsx","components/AppBar.tsx","components/Link.tsx","components/Menu.tsx","components/Drawer.tsx","components/Settings.tsx","model.ts","components/Dialog.tsx","components/Sheet.tsx","components/List.tsx","components/Tabs.tsx","components/App.tsx","serviceWorker.ts","index.tsx"],"names":["ListTypes","SheetActions","pages","todos","url","title","icon","react_default","a","createElement","icons_index_es","tabs","_tabs","Object","defineProperty","ALL","concat","ACTIVE","COMPLETED","settings","about","edit","SheetActionsEnum","EDIT","delete","DELETE","cancel","CANCEL","theme","createMuiTheme","palette","primary","main","secondary","pink","typography","useNextVariants","overrides","MuiDrawer","paperAnchorBottom","maxWidth","marginLeft","marginRight","withRoot","Component","props","react","core_styles","CssBaseline_default","AboutComponent","this","setTitle","React","withStyles","createStyles","appBar","breakpoints","up","width","menuButton","display","classes","index_es","position","className","color","aria-label","onClick","toggleDrawer","variant","noWrap","createLink","_ref","innerRef","objectWithoutProperties","Link","_menuBar","menuBar","drawerWidth","toolbar","mixins","values","map","page","assign","button","to","component","key","closeDrawer","drawer","flexShrink","drawerPaper","withTheme","smUp","implementation","anchor","direction","open","mobileOpen","onClose","paper","ModalProps","keepMounted","Menu","xsDown","SettingsComponent","Model","classCallCheck","storage","items","Array","createClass","value","id","find","item","arguments","length","undefined","Date","getTime","trim","completed","data","index","findIndex","toConsumableArray","slice","reduce","count","active","all","store","DialogComponent","input","createRef","handleClose","_this","current","_this2","opened","aria-labelledby","autoFocus","margin","label","type","fullWidth","defaultValue","onKeyUp","e","keyCode","inputRef","SheetComponent","tabIndex","role","onKeyDown","action","ListComponent","possibleConstructorReturn","getPrototypeOf","call","state","sheetOpened","dialogState","handleSheetClose","setState","model","getItem","deleteItem","handleDialogClose","updateItem","listType","list","getAllItems","filter","NONE","target","nodeName","secondaryAction","checkbox","checked","onChange","c","Sheet","Dialog","backgroundColor","maxHeight","overflowY","padding","transform","view","TabsComponent","activeTab","dialogOpened","handleDialogOpen","createItem","handleChange","event","handleChangeIndex","indicatorColor","textColor","tabBar","entries","_ref2","slicedToArray","tab","badgeContent","getCount","es","onChangeIndex","es_Route","path","render","List","fab","borderBottom","bottom","spacing","unit","right","AppComponent","handleDrawerToggle","handleDrawerClose","BrowserRouter","basename","HashRouter","root","AppBar","Drawer","content","Switch","Route","Tabs","Settings","About","Redirect","flexGrow","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","App","document","querySelector","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","scope"],"mappings":"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","file":"static/js/main.d0866f5c.chunk.js","sourcesContent":["import {StyleRulesCallback, WithStyles, WithTheme} from '@material-ui/core';\nimport React from 'react';\n\nexport type Storage = {\n    items: Array<Item>\n}\n\nexport type Item = {\n    id: number;\n    title: string;\n    completed: boolean;\n}\n\nexport type ItemUpdate = {\n    title?: string;\n    completed?: boolean;\n}\n\nexport type Count = {\n    active: number;\n    completed: number;\n    all: number;\n    [key: string]: number;\n}\n\nexport enum ListTypes {\n    ALL = 'all',\n    ACTIVE = 'active',\n    COMPLETED = 'completed',\n    NONE = 'none'\n}\n\nexport enum SheetActions {\n    EDIT = 'Edit',\n    DELETE = 'Delete',\n    CANCEL = 'Cancel'\n}\n\nexport type AppBarComponentProps<T extends string | StyleRulesCallback = string> = WithStyles<T> & {\n    toggleDrawer: (event: React.MouseEvent<HTMLElement>) => void;\n    title: string;\n};\n\nexport type MenuComponentProps<T extends string | StyleRulesCallback = string> = WithStyles<T> & {\n    closeDrawer: (event: React.MouseEvent<HTMLElement>) => void;\n};\n\nexport type DrawerComponentProps<T extends string | StyleRulesCallback = string> = WithStyles<T> & WithTheme & {\n    mobileOpen?: boolean;\n    closeDrawer: (event: React.MouseEvent<HTMLElement>) => void;\n};\n\nexport type ListComponentProps<T extends string | StyleRulesCallback = string> = WithStyles<T> & {\n    type: string;\n};\n\nexport type TabsComponentProps<T extends string | StyleRulesCallback = string> = WithStyles<T> & TitleProps;\n\nexport type AppComponentState = {\n    mobileOpen: boolean;\n    title: string;\n};\n\nexport type TabsComponentState = {\n    activeTab: number;\n    dialogOpened: boolean;\n};\n\nexport type ListComponentState = {\n    sheetOpened: number;\n    dialogState: {\n        opened: boolean;\n        id: number;\n        value: string;\n    };\n};\n\nexport type TitleProps = {\n    setTitle: (title: string) => void;\n    title: string;\n}\n\nexport type DialogComponentProps = {\n    title: string;\n    opened: boolean;\n    id?: number;\n    defaultValue?: string;\n    handleClose: (value?: string, id?: number) => void;\n}\n\nexport type SheetComponentProps = {\n    opened: number;\n    handleClose: (action: SheetActions, value: number) => void;\n}","import {\n    Cancel as CancelIcon,\n    CheckBox as CheckBoxIcon,\n    CheckBoxOutlineBlank as CheckBoxOutlineBlankIcon, Delete as DeleteIcon, Edit as EditIcon,\n    Info as InfoIcon,\n    List as ListIcon,\n    Settings as SettingsIcon\n} from '@material-ui/icons';\nimport React from 'react';\nimport {ListTypes, SheetActions as SheetActionsEnum} from './typings';\n\nexport const drawerWidth = 240;\n\nexport const pages = {\n    todos: {\n        url: '/todos',\n        title: 'Todos',\n        icon: <ListIcon/>,\n        tabs: {\n            [ListTypes.ALL]: {\n                url: `/todos/${ListTypes.ALL}`,\n                title: 'All',\n                icon: <ListIcon/>\n            },\n            [ListTypes.ACTIVE]: {\n                url: `/todos/${ListTypes.ACTIVE}`,\n                title: 'Active',\n                icon: <CheckBoxOutlineBlankIcon/>\n            },\n            [ListTypes.COMPLETED]: {\n                url: `/todos/${ListTypes.COMPLETED}`,\n                title: 'Completed',\n                icon: <CheckBoxIcon/>\n            }\n        }\n    },\n    settings: {\n        url: '/settings',\n        title: 'Settings',\n        icon: <SettingsIcon/>\n    }\n    ,\n    about: {\n        url: '/about',\n        title: 'About',\n        icon: <InfoIcon/>\n    }\n};\n\nexport const SheetActions = {\n    edit: {\n        title: SheetActionsEnum.EDIT,\n        icon: <EditIcon/>\n    },\n    delete: {\n        title: SheetActionsEnum.DELETE,\n        icon: <DeleteIcon/>\n    },\n    cancel: {\n        title: SheetActionsEnum.CANCEL,\n        icon: <CancelIcon/>\n    }\n};","import {pink} from '@material-ui/core/colors';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport {createMuiTheme, MuiThemeProvider} from '@material-ui/core/styles';\nimport * as React from 'react';\n\n// A theme with custom primary and secondary color.\n// It's optional.\nconst theme = createMuiTheme({\n    palette: {\n        primary: {main: '#0129c7'},\n        secondary: pink\n    },\n    typography: {\n        useNextVariants: true\n    },\n    overrides: {\n        MuiDrawer: {\n            paperAnchorBottom: {\n                maxWidth: 500,\n                marginLeft: 'auto',\n                marginRight: 'auto'\n            }\n        }\n    }\n});\n\nfunction withRoot<P>(Component: React.ComponentType<P>) {\n    function WithRoot(props: P) {\n        // MuiThemeProvider makes the theme available down the React tree\n        // thanks to React context.\n        return (\n            <MuiThemeProvider theme={theme}>\n                {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n                <CssBaseline/>\n                <Component {...props} />\n            </MuiThemeProvider>\n        );\n    }\n\n    return WithRoot;\n}\n\nexport default withRoot;\n","import React from 'react';\nimport {TitleProps} from '../typings';\n\nclass AboutComponent extends React.Component<TitleProps> {\n    componentDidMount() {\n        this.props.setTitle(this.props.title);\n    }\n\n    render() {\n        return <div>test</div>;\n    }\n}\n\nexport default AboutComponent;","import {AppBar, createStyles, IconButton, Theme, Toolbar, Typography, withStyles} from '@material-ui/core';\nimport {Menu as MenuIcon} from '@material-ui/icons';\nimport React from 'react';\nimport {drawerWidth} from '../constants';\nimport {AppBarComponentProps} from '../typings';\n\nconst styles = (theme: Theme) =>\n    createStyles({\n        appBar: {\n            marginLeft: drawerWidth,\n            [theme.breakpoints.up('sm')]: {\n                width: `calc(100% - ${drawerWidth}px)`\n            }\n        },\n        menuButton: {\n            marginRight: 20,\n            [theme.breakpoints.up('sm')]: {\n                display: 'none'\n            }\n        }\n    });\n\nfunction AppBarComponent(props: AppBarComponentProps<typeof styles>) {\n    const {classes} = props;\n    return (\n        <AppBar position=\"fixed\" className={classes.appBar}>\n            <Toolbar>\n                <IconButton\n                    color=\"inherit\"\n                    aria-label=\"Open drawer\"\n                    onClick={props.toggleDrawer}\n                    className={classes.menuButton}\n                >\n                    <MenuIcon/>\n                </IconButton>\n                <Typography variant=\"h6\" color=\"inherit\" noWrap>\n                    {props.title}\n                </Typography>\n            </Toolbar>\n        </AppBar>\n    );\n}\n\nexport default withStyles(styles)(AppBarComponent);","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nexport default function createLink({innerRef, ...props}: any) {\n    return <Link {...props}/>;\n}","import {\n    AppBar,\n    createStyles,\n    Divider,\n    List,\n    ListItem,\n    ListItemIcon,\n    ListItemText,\n    Theme,\n    Toolbar,\n    Typography,\n    withStyles\n} from '@material-ui/core';\nimport React from 'react';\nimport {drawerWidth, pages} from '../constants';\nimport {MenuComponentProps} from '../typings';\nimport createLink from './Link';\n\nconst styles = (theme: Theme) =>\n    createStyles({\n        menuBar: {\n            [theme.breakpoints.up('sm')]: {\n                width: drawerWidth - 1\n            },\n            left: 0,\n            right: 'auto'\n        },\n        toolbar: theme.mixins.toolbar\n    });\n\nfunction MenuComponent(props: MenuComponentProps<typeof styles>) {\n    const {classes} = props;\n    return (\n        <div>\n            <div className={classes.toolbar}>\n                <AppBar position=\"fixed\" className={classes.menuBar}>\n                    <Toolbar>\n                        <Typography variant=\"h6\" color=\"inherit\" noWrap>\n                            Menu\n                        </Typography>\n                    </Toolbar>\n                </AppBar>\n            </div>\n            <Divider/>\n            <List>\n                {Object.values(pages).map((page) => (\n                    <ListItem\n                        button\n                        {...{to: page.url}}\n                        component={createLink}\n                        key={page.title}\n                        onClick={props.closeDrawer}\n                    >\n                        <ListItemIcon>{page.icon}</ListItemIcon>\n                        <ListItemText primary={page.title}/>\n                    </ListItem>\n                ))}\n            </List>\n        </div>\n    );\n}\n\nexport default withStyles(styles)(MenuComponent);","import {createStyles, Drawer, Hidden, Theme, withStyles} from '@material-ui/core';\nimport React from 'react';\nimport {drawerWidth} from '../constants';\nimport {DrawerComponentProps} from '../typings';\nimport Menu from './Menu';\n\nconst styles = (theme: Theme) =>\n    createStyles({\n        drawer: {\n            [theme.breakpoints.up('sm')]: {\n                width: drawerWidth,\n                flexShrink: 0\n            }\n        },\n        drawerPaper: {\n            width: drawerWidth\n        }\n    });\n\nfunction DrawerComponent(props: DrawerComponentProps<typeof styles>) {\n    const {classes, theme} = props;\n    return (\n        <nav className={classes.drawer}>\n            <Hidden smUp implementation=\"css\">\n                <Drawer\n                    variant=\"temporary\"\n                    anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n                    open={props.mobileOpen}\n                    onClose={props.closeDrawer}\n                    classes={{\n                        paper: classes.drawerPaper\n                    }}\n                    ModalProps={{\n                        keepMounted: true // Better open performance on mobile.\n                    }}\n                >\n                    <Menu closeDrawer={props.closeDrawer}/>\n                </Drawer>\n            </Hidden>\n            <Hidden xsDown implementation=\"css\">\n                <Drawer\n                    classes={{\n                        paper: classes.drawerPaper\n                    }}\n                    variant=\"permanent\"\n                    open\n                >\n                    <Menu closeDrawer={props.closeDrawer}/>\n                </Drawer>\n            </Hidden>\n        </nav>\n    );\n}\n\nexport default withStyles(styles, {withTheme: true})(DrawerComponent);","import React from 'react';\nimport {TitleProps} from '../typings';\n\nclass SettingsComponent extends React.Component<TitleProps> {\n    componentDidMount() {\n        this.props.setTitle(this.props.title);\n    }\n\n    render() {\n        return <div>test</div>;\n    }\n}\n\nexport default SettingsComponent;","import {storage} from 'react-easy-params';\nimport {store} from 'react-easy-state';\nimport {Count, Item, ItemUpdate, Storage} from './typings';\n\nexport class Model {\n    private storage: Storage;\n\n    constructor() {\n        this.storage = storage as unknown as Storage;\n        this.storage.items = this.storage.items || new Array<Item>();\n    }\n\n    getAllItems(): Array<Item> {\n        return this.storage.items;\n    };\n\n    getItem(id: number): Item | undefined {\n        return this.storage.items.find((item) => item.id === id);\n    };\n\n    createItem(title: string = ''): void {\n        const item = {\n            id: new Date().getTime(),\n            title: title.trim(),\n            completed: false\n        };\n        this.storage.items = this.storage.items.concat(item);\n    };\n\n    updateItem(id: number, data: ItemUpdate): void {\n        const index = this.storage.items.findIndex((item) => item.id === id);\n        if (index < 0) {\n            return;\n        }\n        const item = Object.assign(this.storage.items[index], data);\n        this.storage.items = [...this.storage.items.slice(0, index), item, ...this.storage.items.slice(index + 1)]; // immutable splice\n    };\n\n    deleteItem(id: number): void {\n        const index = this.storage.items.findIndex((item) => item.id === id);\n        if (index < 0) {\n            return;\n        }\n        this.storage.items = [...this.storage.items.slice(0, index), ...this.storage.items.slice(index + 1)]; // immutable splice\n    };\n\n    getCount(): Count {\n        return this.storage.items.reduce((count, item) => {\n            return {\n                active: count.active + +!item.completed,\n                completed: count.completed + +item.completed,\n                all: ++count.all\n            };\n        }, {\n            active: 0,\n            completed: 0,\n            all: 0\n        });\n    };\n}\n\nexport default store(new Model());","import {Button, Dialog, DialogActions, DialogContent, DialogTitle, TextField} from '@material-ui/core';\nimport React from 'react';\nimport {DialogComponentProps} from '../typings';\n\nclass DialogComponent extends React.Component<DialogComponentProps> {\n    input: React.RefObject<HTMLInputElement> = React.createRef<HTMLInputElement>();\n\n    handleClose = () => {\n        this.props.handleClose((this.input.current || {value: ''}).value, this.props.id);\n    };\n\n    render() {\n        return (\n            <Dialog\n                open={this.props.opened}\n                onClose={this.handleClose}\n                aria-labelledby=\"form-dialog-title\"\n            >\n                <DialogTitle id=\"form-dialog-title\">Create Item</DialogTitle>\n                <DialogContent>\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"title\"\n                        label=\"Title\"\n                        type=\"text\"\n                        fullWidth\n                        defaultValue={this.props.defaultValue}\n                        onKeyUp={(e) => e.keyCode === 13 && this.handleClose()}\n                        inputRef={this.input}\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleClose} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={this.handleClose} color=\"primary\">\n                        Save\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nexport default DialogComponent;","import {Drawer, List, ListItem, ListItemIcon, ListItemText} from '@material-ui/core';\nimport React from 'react';\nimport {SheetActions} from '../constants';\nimport {SheetComponentProps} from '../typings';\n\nclass SheetComponent extends React.Component<SheetComponentProps> {\n    render() {\n        return (\n            <Drawer\n                anchor=\"bottom\"\n                open={this.props.opened > -1}\n                onClose={() => this.props.handleClose(SheetActions.cancel.title, -1)}\n            >\n                <div\n                    tabIndex={0}\n                    role=\"button\"\n                    onKeyDown={() => this.props.handleClose(SheetActions.cancel.title, -1)}\n                >\n                    <div>\n                        <List>\n                            {Object.values(SheetActions).map((action) => (\n                                <ListItem button key={action.title}\n                                          onClick={() => this.props.handleClose(action.title, this.props.opened)}>\n                                    <ListItemIcon>{action.icon}</ListItemIcon>\n                                    <ListItemText primary={action.title}/>\n                                </ListItem>\n                            ))}\n                        </List>\n                    </div>\n                </div>\n            </Drawer>\n        );\n    }\n}\n\nexport default SheetComponent;","import {\n    Checkbox,\n    createStyles,\n    List,\n    ListItem,\n    ListItemSecondaryAction,\n    ListItemText,\n    withStyles\n} from '@material-ui/core';\nimport React from 'react';\nimport {view} from 'react-easy-state';\nimport model, {Model} from '../model';\nimport {Item, ListComponentProps, ListComponentState, ListTypes, SheetActions} from '../typings';\nimport Dialog from './Dialog';\nimport Sheet from './Sheet';\n\nconst styles = () =>\n    createStyles({\n        list: {\n            backgroundColor: 'white',\n            maxHeight: 'calc(100vh - 137px)',\n            overflowY: 'auto',\n            padding: 0\n        },\n        secondaryAction: {\n            position: 'inherit',\n            transform: 'none'\n        },\n        checkbox: {\n            padding: 6\n        }\n    });\n\nclass ListComponent extends React.Component<ListComponentProps<typeof styles>, ListComponentState> {\n    private listType: string;\n    private model: Model;\n    state = {\n        sheetOpened: -1,\n        dialogState: {\n            opened: false,\n            id: -1,\n            value: ''\n        }\n    };\n\n    constructor(props: ListComponentProps<typeof styles>) {\n        super(props);\n        this.model = model as unknown as Model;\n        this.listType = this.props.type;\n    }\n\n    render() {\n        const {classes} = this.props;\n        const list = this.model.getAllItems()\n            .filter((item: Item) => {\n                switch (this.listType) {\n                    case ListTypes.ALL:\n                        return true;\n                    case ListTypes.ACTIVE:\n                        return !item.completed;\n                    case ListTypes.COMPLETED:\n                        return item.completed;\n                    case ListTypes.NONE:\n                    default:\n                        return false;\n                }\n            })\n            .map((item: Item) => (\n                <ListItem button key={item.id} onClick={(e) => {\n                    if ((e.target as any).nodeName !== 'INPUT') {\n                        this.setState({sheetOpened: item.id});\n                    }\n                }}>\n                    <ListItemSecondaryAction className={classes.secondaryAction}>\n                        <Checkbox className={classes.checkbox}\n                                  checked={item.completed}\n                                  onChange={(e: React.ChangeEvent, c: boolean) => this.model.updateItem(item.id, {completed: c})}/>\n                    </ListItemSecondaryAction>\n                    <ListItemText primary={item.title}/>\n                </ListItem>\n            ));\n        return (\n            <div>\n                <List className={classes.list}>\n                    {list}\n                </List>\n                <Sheet opened={this.state.sheetOpened} handleClose={this.handleSheetClose}/>\n                <Dialog title=\"Edit Item\"\n                        opened={this.state.dialogState.opened}\n                        id={this.state.dialogState.id}\n                        defaultValue={this.state.dialogState.value}\n                        handleClose={this.handleDialogClose}/>\n            </div>\n        );\n    }\n\n    handleSheetClose = (action: SheetActions, id: number) => {\n        this.setState({sheetOpened: -1});\n        const item = this.model.getItem(id);\n        if (!item) {\n            return;\n        }\n        switch (action) {\n            case SheetActions.EDIT:\n                this.setState({\n                    dialogState: {\n                        opened: true,\n                        id: id,\n                        value: item.title\n                    }\n                });\n                break;\n            case SheetActions.DELETE:\n                this.model.deleteItem(id);\n                break;\n            case SheetActions.CANCEL:\n            default:\n                break;\n        }\n    };\n\n    private handleDialogClose = (value: string = '', id: number = -2) => {\n        this.setState({\n            dialogState: {\n                opened: false,\n                id: -1,\n                value: ''\n            }\n        });\n        const item = this.model.getItem(id);\n        const title = value.trim();\n        if (!item || item.title === title || title.length === 0) {\n            return;\n        }\n        this.model.updateItem(id, {title});\n    };\n}\n\nexport default withStyles(styles)(view(ListComponent));","import {AppBar, Badge, createStyles, Fab, Tab, Tabs, Theme, withStyles} from '@material-ui/core';\nimport {Add as AddIcon} from '@material-ui/icons';\nimport React from 'react';\nimport {view} from 'react-easy-state';\nimport {Route} from 'react-router';\nimport SwipeableRoutes from 'react-swipeable-routes';\nimport {pages} from '../constants';\nimport model, {Model} from '../model';\nimport {ListTypes, TabsComponentProps, TabsComponentState} from '../typings';\nimport Dialog from './Dialog';\nimport createLink from './Link';\nimport List from './List';\n\nconst styles = (theme: Theme) =>\n    createStyles({\n        tabBar: {\n            backgroundColor: 'white',\n            borderBottom: '1px solid rgba(0, 0, 0, 0.12)'\n        },\n        fab: {\n            position: 'absolute',\n            bottom: theme.spacing.unit * 2,\n            right: theme.spacing.unit * 2\n        }\n    });\n\nclass TabsComponent extends React.Component<TabsComponentProps<typeof styles>, TabsComponentState> {\n    state: TabsComponentState = {\n        activeTab: 0,\n        dialogOpened: false\n    };\n    private model: Model;\n\n    constructor(props: TabsComponentProps<typeof styles>) {\n        super(props);\n        this.model = model as unknown as Model;\n    }\n\n    componentDidMount() {\n        this.props.setTitle(this.props.title);\n    }\n\n    handleDialogOpen = () => {\n        this.setState({dialogOpened: true});\n    };\n\n    handleDialogClose = (value: string = '') => {\n        this.setState({dialogOpened: false});\n        if (value.trim().length > 0) {\n            this.model.createItem(value);\n        }\n    };\n\n    handleChange = (event: React.ChangeEvent<{}>, value: number) => {\n        this.handleChangeIndex(value);\n    };\n\n    handleChangeIndex = (value: number) => {\n        this.setState({activeTab: value});\n    };\n\n    render() {\n        const {classes} = this.props;\n        return (\n            <div>\n                <AppBar position=\"static\" color=\"default\">\n                    <Tabs\n                        value={this.state.activeTab}\n                        onChange={this.handleChange}\n                        indicatorColor=\"primary\"\n                        textColor=\"primary\"\n                        className={classes.tabBar}\n                        fullWidth\n                    >\n                        {Object.entries(pages.todos.tabs).map(([key, tab]) => {\n                            return <Tab\n                                label={tab.title}\n                                icon={\n                                    <Badge color=\"secondary\" badgeContent={this.model.getCount()[key]}>\n                                        {tab.icon}\n                                    </Badge>}\n                                key={tab.title}\n                                {...{to: tab.url}}\n                                component={createLink}\n                            />;\n                        })}\n                    </Tabs>\n                </AppBar>\n                <SwipeableRoutes index={this.state.activeTab} onChangeIndex={this.handleChangeIndex}>\n                    <Route path={pages.todos.tabs[ListTypes.ALL].url}\n                           render={(props) => <List type={ListTypes.ALL} {...props}/>}/>\n                    <Route path={pages.todos.tabs[ListTypes.ACTIVE].url}\n                           render={(props) => <List type={ListTypes.ACTIVE} {...props}/>}/>\n                    <Route path={pages.todos.tabs[ListTypes.COMPLETED].url}\n                           render={(props) => <List type={ListTypes.COMPLETED} {...props}/>}/>\n                </SwipeableRoutes>\n                <Fab className={classes.fab} color=\"secondary\" onClick={this.handleDialogOpen}>\n                    <AddIcon/>\n                </Fab>\n                <Dialog handleClose={this.handleDialogClose} opened={this.state.dialogOpened} title=\"Create Item\"/>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(view(TabsComponent));","import {createStyles, CssBaseline, Theme, withStyles, WithStyles} from '@material-ui/core';\nimport React from 'react';\nimport {BrowserRouter, HashRouter, Redirect, Route, Switch} from 'react-router-dom';\nimport {pages} from '../constants';\nimport {AppComponentState} from '../typings';\nimport withRoot from '../withRoot';\nimport About from './About';\nimport AppBar from './AppBar';\nimport Drawer from './Drawer';\nimport Settings from './Settings';\nimport Tabs from './Tabs';\n\nconst styles = (theme: Theme) =>\n    createStyles({\n        root: {\n            display: 'flex'\n        },\n        toolbar: theme.mixins.toolbar,\n        content: {\n            flexGrow: 1\n        }\n    });\n\nclass AppComponent extends React.Component<WithStyles<typeof styles>, AppComponentState> {\n    state: AppComponentState = {\n        mobileOpen: false,\n        title: 'Todos'\n    };\n\n    handleDrawerToggle = () => {\n        this.setState((state: AppComponentState) => ({mobileOpen: !state.mobileOpen}));\n    };\n\n    handleDrawerClose = () => {\n        this.setState({mobileOpen: false});\n    };\n\n    setTitle = (title: string) => {\n        this.setState({title: title});\n    };\n\n    render() {\n        const {classes} = this.props;\n        return (\n            <BrowserRouter basename='/ma_bjoern/react-fw/'>\n                <HashRouter>\n                    <div className={classes.root}>\n                        <CssBaseline/>\n                        <AppBar toggleDrawer={this.handleDrawerToggle} title={this.state.title}/>\n                        <Drawer mobileOpen={this.state.mobileOpen} closeDrawer={this.handleDrawerClose}/>\n                        <main className={classes.content}>\n                            <div className={classes.toolbar}/>\n                            <Switch>\n                                <Route path={pages.todos.url} render={(props) => <Tabs {...props}\n                                                                                       title={pages.todos.title}\n                                                                                       setTitle={this.setTitle}/>}/>\n                                <Route path={pages.settings.url} render={(props) => <Settings {...props}\n                                                                                              title={pages.settings.title}\n                                                                                              setTitle={this.setTitle}/>}/>\n                                <Route path={pages.about.url} render={(props) => <About {...props}\n                                                                                        title={pages.about.title}\n                                                                                        setTitle={this.setTitle}/>}/>\n                                <Redirect to={pages.todos.tabs.all.url}/>\n                            </Switch>\n                        </main>\n                    </div>\n                </HashRouter>\n            </BrowserRouter>\n        );\n    }\n}\n\nexport default withRoot(withStyles(styles)(AppComponent));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n    scope?: string;\n};\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n            window.location.href\n        );\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit http://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl, config)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport App from './components/App';\nimport {register} from './serviceWorker';\n\nReactDOM.render(<App/>, document.querySelector('#root'));\n\n\nregister({scope: '/ma_bjoern/react-fw/'});"],"sourceRoot":""}