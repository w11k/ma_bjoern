{"version":3,"sources":["model.js","components/pages/ListPage.jsx","components/pages/TabsPage.jsx","routes.js","components/pages/MenuPanelPage.jsx","components/pages/SettingsPage.jsx","components/pages/AboutPage.jsx","serviceWorker.js","index.js","components/App.jsx"],"names":["storage","items","model","store","getAllItems","getItem","id","find","item","createItem","title","arguments","length","undefined","Date","getTime","trim","completed","concat","updateItem","data","index","findIndex","Object","assign","toConsumableArray","slice","deleteItem","getCount","reduce","count","active","total","ListPage","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","listType","f7route","route","tab","state","sheetOpened","_this2","list","filter","ListTypes","ALL","ACTIVE","COMPLETED","NONE","map","react_default","a","createElement","framework7_react_esm","key","onClick","e","target","className","setState","slot","checked","onChange","toggleItem","noChevron","opened","onSheetClosed","sheetClose","openDialog","event","_this3","input","$f7","dialog","prompt","result","$el","val","focus","React","Component","view","TabsPage","pageContent","tabs","bgColor","iconIos","iconMd","panelOpen","tabbar","tabLink","routeTabId","href","tabLinkActive","routable","tabActive","position","color","ios","md","routes","path","component","TabPage","link","panelClose","redirect","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","Framework7","use","Framework7React","ReactDOM","render","f7params","name","theme","params","left","cover","url","main","pushState","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","scope"],"mappings":"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","file":"static/js/main.5f81a31b.chunk.js","sourcesContent":["import {storage} from 'react-easy-params';\nimport {store} from 'react-easy-state';\n\nstorage.items = storage.items || [];\n\nconst model = store({\n    getAllItems: () => {\n        return storage.items;\n    },\n\n    getItem: (id) => {\n        return storage.items.find((item) => item.id === id);\n    },\n\n    createItem: (title = '') => {\n        const item = {\n            id: new Date().getTime(),\n            title: title.trim(),\n            completed: false\n        };\n        storage.items = storage.items.concat(item);\n    },\n\n    updateItem: (id, data) => {\n        const index = storage.items.findIndex((item) => item.id === id);\n        if (index < 0) {\n            return;\n        }\n        const item = Object.assign(storage.items[index], data);\n        storage.items = [...storage.items.slice(0, index), item, ...storage.items.slice(index + 1)]; // immutable splice\n    },\n\n    deleteItem: (id) => {\n        const index = storage.items.findIndex((item) => item.id === id);\n        if (index < 0) {\n            return;\n        }\n        storage.items = [...storage.items.slice(0, index), ...storage.items.slice(index + 1)]; // immutable splice\n    },\n\n    getCount: () => {\n        return storage.items.reduce((count, item) => {\n            return {\n                active: count.active + +!item.completed,\n                completed: count.completed + +item.completed,\n                total: ++count.total\n            };\n        }, {\n            active: 0,\n            completed: 0,\n            total: 0\n        });\n    }\n});\nexport default model;","import {Checkbox, List, ListButton, ListItem, Page, Sheet} from 'framework7-react';\nimport React from 'react';\nimport {view} from 'react-easy-state';\nimport model from '../../model';\nimport {ListTypes} from '../../routes';\n\nclass ListPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.model = model;\n        this.listType = this.props.f7route.route.tab.id;\n        this.state = {\n            sheetOpened: -1\n        }\n    }\n\n    render() {\n        const list = this.model.getAllItems()\n            .filter(item => {\n                switch (this.listType) {\n                    case ListTypes.ALL:\n                        return true;\n                    case ListTypes.ACTIVE:\n                        return !item.completed;\n                    case ListTypes.COMPLETED:\n                        return item.completed;\n                    case ListTypes.NONE:\n                    default:\n                        return false;\n                }\n            })\n            .map(item => (\n                <ListItem key={item.id} title={item.title} onClick={(e) => {\n                    if (e.target.className === 'item-inner') {\n                        this.setState({sheetOpened: item.id});\n                    }\n                }}>\n                    <Checkbox slot=\"media\" checked={item.completed} onChange={(e) => this.toggleItem(item.id, e)}/>\n                </ListItem>\n            ));\n        return (\n            <Page>\n                <List noChevron={true}>\n                    {list}\n                </List>\n                <Sheet opened={this.state.sheetOpened > -1} onSheetClosed={() => {\n                    this.setState({sheetOpened: -1});\n                }}>\n                    <List>\n                        <ListButton title=\"Edit\" sheetClose onClick={() => this.openDialog(this.state.sheetOpened)}/>\n                        <ListButton title=\"Delete\" sheetClose onClick={() => this.deleteItem(this.state.sheetOpened)}/>\n                        <ListButton title=\"Cancel\" sheetClose/>\n                    </List>\n                </Sheet>\n            </Page>\n        );\n    }\n\n    toggleItem(id, event) {\n        this.model.updateItem(id, {completed: event.target.checked});\n    }\n\n    deleteItem(id) {\n        this.model.deleteItem(id);\n    }\n\n    openDialog(id) {\n        const item = this.model.getItem(id);\n        const dialog = this.$f7.dialog.prompt(null, 'Edit Item', (result) => {\n            if (item.title === result) {\n                return;\n            }\n            this.model.updateItem(item.id, {title: result});\n        });\n        const input = dialog.$el.find('input');\n        input.val(item.title);\n        input.focus();\n    }\n}\n\nexport default view(ListPage);","import {Fab, Icon, Link, Navbar, NavLeft, NavTitle, Page, Tab, Tabs, Toolbar} from 'framework7-react';\nimport React from 'react';\nimport model from '../../model';\nimport {ListTypes} from '../../routes';\n\nexport default class TabsPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.model = model;\n    }\n\n    render() {\n        return <Page pageContent={false} tabs={true}>\n            <Navbar bgColor=\"primary\">\n                <NavLeft>\n                    <Link iconIos=\"f7:menu\" iconMd=\"material:menu\" panelOpen=\"left\"/>\n                </NavLeft>\n                <NavTitle>Todos</NavTitle>\n            </Navbar>\n            <Toolbar tabbar bgColor=\"primary\">\n                <Link tabLink routeTabId={ListTypes.ALL} href=\"/todos/all\" tabLinkActive>All</Link>\n                <Link tabLink routeTabId={ListTypes.ACTIVE} href=\"/todos/active\">Active</Link>\n                <Link tabLink routeTabId={ListTypes.COMPLETED} href=\"/todos/completed\">Completed</Link>\n            </Toolbar>\n            <Tabs routable>\n                <Tab id={ListTypes.ALL} tabActive/>\n                <Tab id={ListTypes.ACTIVE}/>\n                <Tab id={ListTypes.COMPLETED}/>\n            </Tabs>\n            <Fab position=\"right-bottom\" slot=\"fixed\" color=\"pink\" onClick={() => this.openDialog()}>\n                <Icon ios=\"f7:add\" md=\"material:add\"/>\n            </Fab>\n        </Page>;\n    }\n\n    openDialog() {\n        const dialog = this.$f7.dialog.prompt(null, 'Create Item', (result) => {\n            if (result.trim() === '') {\n                return;\n            }\n            this.model.createItem(result);\n        });\n        const input = dialog.$el.find('input');\n        input.focus();\n    }\n}\n","import AboutPage from './components/pages/AboutPage';\nimport ListPage from './components/pages/ListPage';\nimport MenuPanelPage from './components/pages/MenuPanelPage';\nimport SettingsPage from './components/pages/SettingsPage';\nimport TabPage from './components/pages/TabsPage';\n\nexport const ListTypes = {\n    ALL: 'all',\n    ACTIVE: 'active',\n    COMPLETED: 'completed',\n    NONE: 'none'\n};\n\nexport default [\n    {\n        path: '/todos/',\n        component: TabPage,\n        tabs: [\n            {\n                path: '/all',\n                id: ListTypes.ALL,\n                component: ListPage\n            },\n            {\n                path: '/active',\n                id: ListTypes.ACTIVE,\n                component: ListPage\n            },\n            {\n                path: '/completed',\n                id: ListTypes.COMPLETED,\n                component: ListPage\n            }\n        ]\n    },\n    {\n        path: '/menu/',\n        component: MenuPanelPage\n    },\n    {\n        path: '/settings/',\n        component: SettingsPage\n    },\n    {\n        path: '/about/',\n        component: AboutPage\n    },\n    {\n        path: '/',\n        redirect: '/todos/'\n    }\n];\n","import {List, ListItem, Navbar, Page} from 'framework7-react';\nimport React from 'react';\n\nexport default () => (\n    <Page>\n        <Navbar title=\"Todo-App\" bgColor=\"primary\"/>\n        <List noChevron={true}>\n            <ListItem link=\"/todos/\" title=\"Todos\" view=\"#main-view\" panelClose/>\n            <ListItem link=\"/settings/\" title=\"Settings\" view=\"#main-view\" panelClose/>\n            <ListItem link=\"/about/\" title=\"About\" view=\"#main-view\" panelClose/>\n        </List>\n    </Page>\n);\n","import {Link, Navbar, NavLeft, NavTitle, Page} from 'framework7-react';\nimport React from 'react';\n\nexport default () => (\n    <Page>\n        <Navbar bgColor=\"primary\">\n            <NavLeft>\n                <Link iconIos=\"f7:menu\" iconMd=\"material:menu\" panelOpen=\"left\"/>\n            </NavLeft>\n            <NavTitle>Settings</NavTitle>\n        </Navbar>\n        test\n    </Page>\n);\n","import {Link, Navbar, NavLeft, NavTitle, Page} from 'framework7-react';\nimport React from 'react';\n\nexport default () => (\n    <Page>\n        <Navbar bgColor=\"primary\">\n            <NavLeft>\n                <Link iconIos=\"f7:menu\" iconMd=\"material:menu\" panelOpen=\"left\"/>\n            </NavLeft>\n            <NavTitle>About</NavTitle>\n        </Navbar>\n        test\n    </Page>\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit http://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl, config)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","// Import Framework7-React plugin\nimport Framework7React from 'framework7-react';\n// Framework7 styles\nimport 'framework7/css/framework7.min.css';\n// Import Framework7\nimport Framework7 from 'framework7/framework7.esm.bundle';\n// Import React and ReactDOM\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n// Import main App component\nimport App from './components/App.jsx';\n// Custom app styles\nimport './css/app.css';\n// Icons\nimport './css/icons.css';\n// ServiceWorker\nimport * as serviceWorker from './serviceWorker';\n\n// Init Framework7-React plugin\nFramework7.use(Framework7React);\n\n// Mount React App\nReactDOM.render(\n    React.createElement(App),\n    document.getElementById('app')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register({scope: '/ma_bjoern/react-nui/'});\n\nwindow.addEventListener('hashchange', () => {\n    debugger;\n});","import {App, Panel, Statusbar, View} from 'framework7-react';\nimport React from 'react';\n\nimport routes from '../routes';\n\nexport default function (props) {\n\n    // Framework7 parameters here\n    const f7params = {\n        id: 'io.framework7.react-nui', // App bundle ID\n        name: 'Todo', // App name\n        theme: 'auto', // Automatic theme detection\n        // App routes\n        routes\n    };\n\n    return (\n        <App params={f7params}>\n            {/* Statusbar */}\n            <Statusbar/>\n\n            {/* Left Panel */}\n            <Panel left cover>\n                <View url=\"/menu/\"/>\n            </Panel>\n\n            {/* Main View */}\n            <View id=\"main-view\" url=\"/todos/\" main className=\"ios-edges\" pushState={true}/>\n        </App>\n    );\n};\n"],"sourceRoot":""}